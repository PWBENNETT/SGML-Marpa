:default ::= action => ::array bless => ::lhs
lexeme default = action => ::array bless => ::name
:start ::= PotentiallySystemizedDocument
CapacitySet ::= 'CAPACITY' ps CapacityGuts
CapacityGuts ::= PublicCapacity
               | SGMLRefCapacity
PublicCapacity ::= 'PUBLIC' ps PublicIdentifier
SGMLRefCapacity ::= 'SGMLREF' SGMLRefCapacityListGuts
SGMLRefCapacityListGuts ::= SGMLRefCapacityGuts+
SGMLRefCapacityGuts ::= ps Name ps Number
FeatureUse ::= 'FEATURES' ps MarkupMinimizationFeatures
                          ps LinkTypeFeatures
                          ps OtherFeatures
MarkupMinimizationFeatures ::= 'MINIMIZE' ps 'DATATAG' ps Boolean
                                          ps 'OMITTAG' ps Boolean
                                          ps 'RANK' ps Boolean
                                          ps 'SHORTTAG' ps Boolean
LinkTypeFeatures ::= 'LINK' ps 'SIMPLE' ps CountedBoolean
                            ps 'IMPLICIT' ps Boolean
                            ps 'EXPLICIT' ps CountedBoolean
OtherFeatures ::= 'OTHER' ps 'CONCUR' ps CountedBoolean
                          ps 'SUBDOC' ps CountedBoolean
                          ps 'FORMAL' ps Boolean
Squo ~ [']
Special ~ '('
        | ')'
        | '+'
        | ','
        | '-'
        | '.'
        | '/'
        | ':'
        | '='
        | '?'
        | Squo
shortref ~ '&#TAB;'
         | '&#RE;'
         | '&#RS;'
         | '&#RS;B'
         | '&#RS;&#RE;'
         | '&#RS;B&#RE;'
         | 'B&#RE;'
         | '&#SPACE;'
         | 'BB'
         | '"'
         | '#'
         | '%'
         | Squo
         | '('
         | ')'
         | '*'
         | '+'
         | ','
         | '-'
         | '--'
         | ':'
         | ';'
         | '='
         | '@'
         | '['
         | ']'
         | '^'
         | '_'
         | '{'
         | '|'
         | '}'
         | '~'
slashslash ~ <double slash>
<double slash> ~ '//'
CharacterSetDescription ::= ps BaseCharacterSet ps DescribedCharacterSetPortion
BaseCharacterSet ::= 'BASESET' ps PublicIdentifier
DescribedCharacterSetPortion ::= 'DESCSET' ps CharacterDescriptions
                               | Nil
CharacterDescriptions ::= CharacterDescription ps CharacterDescriptions
                        | CharacterDescription
CharacterDescription ::= DescribedSetCharacterNumber ps NumberOfCharacters ps CharDescChoice
CharDescChoice ::= BaseSetCharacterNumber
                 | MinimumLiteral
                 | 'UNUSED'
DescribedSetCharacterNumber ::= CharacterNumber
BaseSetCharacterNumber ::= CharacterNumber
NumberOfCharacters ::= Number
s ~ <s single>
<s single> ~ RE
           | RS
           | SPACE
           | SEPCHAR
<s opt> ~ <s single>
        | Nothing
<s star> ~ <s single>*
<s plus> ~ <s single>+
ts ::= s
     | ParameterEntityReference
ps ::= ts
     | CommentDeclaration
<ps opt> ::= ps
           | Nil
ds ::= ps
     | ProcessingInstruction
     | MarkedSectionDeclaration
Nil ~ Nothing
PotentiallySystemizedDocument ::= OpeningSystemDeclarations SGMLDocument
OpeningSystemDeclarations ::= <s star> SystemDeclarationList
                            | Nil
SystemDeclarationList ::= SystemDeclaration+ separator => <s star> proper => 1
SGMLDocument ::= SGMLDocumentEntity SGMLDocumentAtoms <s star>
SGMLDocumentAtoms ::= SGMLDocumentAtom*
SGMLDocumentAtom ::= SGMLSubDocumentEntity
                   | SGMLTextEntity
                   | CharacterDataEntity
                   | SpecificCharacterDataEntity
                   | NonSGMLData
SGMLDocumentEntity ::= <s star> SGMLDeclaration Prolog DocumentInstanceSet
SGMLSubDocumentEntity ::= Prolog DocumentInstanceSet
SGMLTextEntity ::= SGMLCharacter
                 | Nil
CharacterDataEntity ::= SGMLCharacter
                      | Nil
SpecificCharacterDataEntity ::= SGMLCharacter
                              | Nil
NonSGMLData ::= Characters
DocumentInstanceSet ::= BaseDocumentElement OPList
                      | BaseDocumentElement
BaseDocumentElement ::= DocumentElement
DocumentElement ::= Element
Element ::= StartTag Content EndTag
StartTag ::= stago TagType AttributeSpecifications <s opt> tagc
           | MinimizedStartTag
MinimizedStartTag ::= EmptyStartTag
                    | UnclosedStartTag
                    | NetEnablingStartTag
EmptyStartTag ::= stago tagc
UnclosedStartTag ::= stago TagType AttributeSpecifications <s opt>
NetEnablingStartTag ::= stago NetTagType AttributeSpecifications <s opt> neto
EndTag ::= etago TagType <s opt> tagc
         | MinimizedEndTag
MinimizedEndTag ::= EmptyEndTag
                  | UnclosedEndTag
                  | NullEndTag
EmptyEndTag ::= etago tagc
UnclosedEndTag ::= etago TagType <s opt>
NullEndTag ::= netc
TagType ::= DocumentTypeSpecification GenericIdentifierSpecification
NetTagType ::= GenericIdentifierSpecification
Content ::= MixedContent
          | ElementContent
          | ReplaceableCharacterData
          | CharacterData
          | Nil
MixedContent ::= DataCharacter
               | ElementContent
ElementContent ::= Element
                 | OtherContent
OtherContent ::= CommentDeclaration
               | ShortReferenceUseDeclaration
               | LinkSetUseDeclaration
               | ProcessingInstruction
               | shortref
               | CharacterReference
               | GeneralEntityReference
               | MarkedSectionDeclaration
DocumentTypeSpecification ::= NameGroup
                            | Nil
GenericIdentifierSpecification ::= GenericIdentifier
                                 | RankStem
GenericIdentifier ::= Name
AttributeSpecifications ::= <s plus> AttributeSpecificationPlus
                          | Nil
AttributeSpecificationPlus ::= AttributeSpecification+ separator => <s star> proper => 1
AttributeSpecification ::= Name <s star> vi <s star> AttributeValueSpecification
                         | AttributeValueSpecification
AttributeValueSpecification ::= AttributeValue
                              | AttributeValueLiteral
AttributeValueLiteral ::= ( lit )  ReplaceableCharacterData ( lit )
                        | ( lita ) ReplaceableCharacterData ( lita )
AttributeValue ::= CharacterData
                 | GeneralEntityName
                 | GeneralEntityNameList
                 | IDValue
                 | IDReferenceValue
                 | IDReferenceList
                 | Name
                 | NameList
                 | NameToken
                 | NameTokenList
                 | NotationName
                 | Number
                 | NumberList
                 | NumberToken
                 | NumberTokenList
GeneralEntityNameList ::= NameList
IDValue ::= Name
IDReferenceList ::= NameList
IDReferenceValue ::= Name
NotationName ::= Name
Space ~ SPACE
NameList ::= Name+ separator => Space proper => 1
NumberList ::= Number+ separator => Space proper => 1
NumberTokenList ::= NumberToken+ separator => Space proper => 1
NameTokenList ::= NameToken+ separator => Space proper => 1
ProcessingInstruction ::= ( pio ) SystemDataStar ( pic )
SystemDataStar ::= SystemData*
SystemData ::= CharacterData
ReplaceableCharacterData ::= ReplaceableCharacterDataAtom*
ReplaceableCharacterDataAtom ::= DataCharacter
                               | CharacterReference
                               | GeneralEntityReference
CharacterData ::= DataCharacterPlus
DataCharacterPlus ::= DataCharacter+
DataCharacter ::= SGMLCharacterAtom
Characters ::= Character+
Character ::= SGMLCharacter
            | NONSGML
SGMLCharacter ::= SGMLCharacterAtom+
SGMLCharacterAtom ::= MarkupCharacter
                    | DATACHAR
MarkupCharacter ::= NameCharacter
                  | FunctionCharacter
                  | DELMCHAR
NameToken ::= NameCharacter
NumberToken ::= Digit NameCharacter
GeneralEntityReference   ::= ( ero )  DocumentTypeSpecification Name ( ReferenceEnd )
ParameterEntityReference ::= ( pero ) DocumentTypeSpecification Name ( ReferenceEnd )
ReferenceEnd ~ refc
             | refc RE
CharacterReference ::= ( cro ) FunctionName    ( ReferenceEnd )
                     | ( cro ) CharacterNumber ( ReferenceEnd )
FunctionName ::= 'RE'
               | 'RS'
               | 'SPACE'
               | Name
CharacterNumber ::= Number
ParameterLiteral ::= (lit)  ReplaceableParameterData (lit)
                   | (lita) ReplaceableParameterData (lita)
ReplaceableParameterData ::= ReplaceableParameterDataAtom*
                           | ReplaceableParameterDataAtom
ReplaceableParameterDataAtom ::= DataCharacter
                               | CharacterReference
                               | ParameterEntityReference
NameTokenGroup ::= ( grpo ) ts NameTokens ts ( grpc )
NameTokens ::= NameToken+ separator => Connection proper => 1
NameGroup ::= ( grpo ) ts Names ts ( grpc )
Names ::= Name+ separator => Connection proper => 1
Connection ::= ts Connector
Connector ::= and
            | or
            | seq
AssociatedElementType ::= GenericIdentifier
                        | NameGroup
ExternalIdentifier ::= 'SYSTEM'
                     | 'PUBLIC' ps PublicIdentifier
                     | 'SYSTEM' ps SystemIdentifier
                     | 'PUBLIC' ps PublicIdentifier ps SystemIdentifier
PublicIdentifier ::= MinimumLiteral
SystemIdentifier ::= ( lit )  SystemDataStar ( lit )
                   | ( lita ) SystemDataStar ( lita )
MinimumLiteral ::= ( lit )  MinimumData ( lit )
                 | ( lita ) MinimumData ( lita )
                 | ( lit ) ( lit )
                 | ( lita ) ( lita )
MinimumData ::= MinimumDataCharacter+
MinimumDataCharacter ~ RS
                     | RE
                     | SPACE
                     | LCLetter
                     | UCLetter
                     | DIGIT
                     | Special
FormalPublicIdentifier ::= OwnerIdentifier slashslash TextIdentifier
OwnerIdentifier ::= ISOOwnerIdentifier
                  | RegisteredOwnerIdentifier
                  | UnregisteredOwnerIdentifier
ISOOwnerIdentifier ::= MinimumData
RegisteredOwnerIdentifier ::= plus slashslash MinimumData
UnregisteredOwnerIdentifier ::= minus slashslash MinimumData
TextIdentifier ::= PublicTextClass Space UnavailableTextIndicator PublicTextGuts slashslash PublicTextLanguage PTDV
PublicTextGuts ::= PublicTextDescription
                 | PublicTextDesignatingSequence
PTDV ::= slashslash PublicTextDisplayVersion
       | Nil
PublicTextDisplayVersion ::= DATACHAR PublicTextDisplayVersion
                           | DATACHAR
UnavailableTextIndicator ::= minus slashslash
                           | Nil
PublicTextClass ::= Name
PublicTextDescription ::= ISOTextDescription
                        | MinimumData
ISOTextDescription ::= MinimumData
PublicTextLanguage ::= Name
PublicTextDesignatingSequence ::= Name
CommentDeclaration ::= ( mdo ) CommentList ( mdc )
CommentList ::= Comment+ separator => s proper => 1
Comment ::= ( com ) SGMLCharacter ( com )
MarkedSectionDeclaration ::= ( MarkedSectionStart ) StatusKeywordSpecification ( dso ) MarkedSection ( MarkedSectionEnd )
MarkedSectionStart ::= mdo dso
MarkedSectionEnd ::= msc mdc
MarkedSection ::= SGMLCharacter
StatusKeywordSpecification ::= ps StatusKeyword <ps opt>
StatusKeyword ::= 'TEMP'
                | 'CDATA'
                | 'IGNORE'
                | 'INCLUDE'
                | 'RCDATA'
EntityDeclaration ::= ( mdo ) 'ENTITY' ps EntityName ps EntityText ps ( mdc )
EntityName ::= GeneralEntityName
             | ParameterEntityName
GeneralEntityName ::= Name
                    | ( rni ) 'DEFAULT'
ParameterEntityName ::= ( pero ) ps Name
EntityText ::= ParameterLiteral
             | DataText
             | BracketedText
             | ExternalEntitySpecification
DataText ::= DataTextGuts ps ParameterLiteral
DataTextGuts ::= 'CDATA'
               | 'SDATA'
               | 'PI'
BracketedText ::= BracketedTextGuts ps ParameterLiteral
BracketedTextGuts ::= 'STARTTAG'
                    | 'ENDTAG'
                    | 'MS'
                    | 'MD'
ExternalEntitySpecification ::= ExternalIdentifier
                              | ExternalIdentifier ps EntityType
EntityType ::= 'SUBDOC'
             | 'NDATA' ps NotationName DataAttributeSpecification
             | 'CDATA' ps NotationName DataAttributeSpecification
             | 'SDATA' ps NotationName DataAttributeSpecification
DataTagGroup ::= ( dtgo ) ts GenericIdentifier ts seq ts DataTagPattern ts ( dtgc ) Nil
               | ( dtgo ) ts GenericIdentifier ts seq ts DataTagPattern ts ( dtgc ) OccurenceIndicator
DataTagPattern ::= DataTagTemplate      OptionalDataTagPaddingTemplate
                 | DataTagTemplateGroup OptionalDataTagPaddingTemplate
OptionalDataTagPaddingTemplate ::= ts seq DataTagPaddingTemplate
                                 | Nil
DataTagTemplateGroup ::= ( grpo ) ts DataTagTemplateList ts ( grpc )
tsorts ::= ts or ts
DataTagTemplateList ::= DataTagTemplate+ separator => tsorts proper => 1
DataTagTemplate ::= ParameterLiteral
DataTagPaddingTemplate ::= ParameterLiteral
NotationIdentifier ::= ExternalIdentifier
AssociatedNotationName ::= ( rni ) 'NOTATION' ps NotationName
                         | ( rni ) 'NOTATION' ps NameGroup
DataAttributeSpecification ::= ps ( dso ) AttributeSpecificationPlus <s star> ( dsc )
ShortReferenceMappingDeclaration ::= ( mdo ) 'SHORTREF' ps MapName PLNmPlus ps ( mdc )
PLNmPlus ::= PLNm+
PLNm ::= ps ParameterLiteral ps Name
MapName ::= Name
ShortReferenceUseDeclaration ::= ( mdo ) 'USEMAP' ps MapSpecification AETGuts ps ( mdc )
AETGuts ::= ps AssociatedElementType
          | Nil
MapSpecification ::= MapName
                   | ( rni ) 'EMPTY'
SourceElementSpecification ::= AssociatedElementType Uselink Postlink LinkAttributeSpecification
Uselink ::= ps ( rni ) 'USELINK' ps LSN
          | Nil
LSN ::= LinkSetName
      | ( rni ) 'EMPTY'
Postlink ::= ps ( rni ) 'POSTLINK' ps LinkSetSpecification
           | Nil
LinkAttributeSpecification ::= s ( dso ) AttributeSpecificationPlus s ( dsc )
                             | Nil
ExplicitLinkRule ::= SourceElementSpecification ps ResultElementSpecification
                   | SourceElementSpecification ps ( rni ) 'IMPLIED'
                   | ( rni ) 'IMPLIED' ps ResultElementSpecification
ResultElementSpecification ::= GenericIdentifier
                             | GenericIdentifier ResultAttributeSpecification
ResultAttributeSpecification ::= s ( dso ) AttributeSpecificationPlus ( dsc )
IDLinkSetDeclaration ::= ( mdo ) 'USELINK' ps LinkSetSpecification
                                           ps LinkTypeName
                                           ps
                         ( mdc )
                       | ( mdo ) 'USELINK' ps LinkSetSpecification
                                           ps LinkTypeName
                         ( mdc )
LinkSetSpecification ::= LinkSetName
                       | ( rni ) 'EMPTY'
                       | ( rni ) 'RESTORE'
ConcreteSyntaxScope ::= 'SCOPE' ps 'DOCUMENT'
                      | 'SCOPE' ps 'INSTANCE'
ConcreteSyntax ::= 'SYNTAX' ps PublicConcreteSyntax
                 | 'SYNTAX' ps PrivateConcreteSyntax
PrivateConcreteSyntax ::= ShunnedCharacterNumberIdentification
                          ps SyntaxReferenceCharacterSet
                          ps FunctionCharacterIdentification
                          ps NamingRules
                          ps DelimiterSet
                          ps ReservedNameUse
                          ps QuantitySet
PublicConcreteSyntax ::= 'PUBLIC' ps PublicIdentifier
                       | 'PUBLIC' ps PublicIdentifier PublicSwitches
PublicSwitches ::= 'SWITCHES' PublicSwitchPlus
PublicSwitchPlus ::= PublicSwitch PublicSwitchPlus
                   | PublicSwitch
PublicSwitch ::= ps CharacterNumber ps CharacterNumber
ShunnedCharacterNumberIdentification ::= 'SHUNCHAR' ps 'NONE'
                                       | 'SHUNCHAR' ps 'CONTROLS' ps SCNList
SCNList ::= CharacterNumber+ separator => ps proper => 1
SyntaxReferenceCharacterSet ::= CharacterSetDescription
FunctionCharacterIdentification ::= 'FUNCTION' ps 'RE' ps CharacterNumber
                                               ps 'RS' ps CharacterNumber
                                               ps 'SPACE' ps CharacterNumber
                                               AddedFunctionCharacters
AddedFunctionCharacters ::= ps AddedFunctionCharacterList
                          | Nil
AddedFunctionCharacterList ::= AddedFunctionCharacter+ separator => ps proper => 1
AddedFunctionCharacter ::= AddedFunction ps FunctionClass ps CharacterNumber
AddedFunction ::= Name
FunctionClass ::= 'FUNCHAR'
                | 'MSICHAR'
                | 'MSOCHAR'
                | 'MSSCHAR'
                | 'SEPCHAR'
NamingRules ::= 'NAMING' ps 'LCNMSTART' ps ParameterLiteral
                         ps 'UCNMSTART' ps ParameterLiteral
                         ps 'LCNMCHAR'  ps ParameterLiteral
                         ps 'UCNMCHAR'  ps ParameterLiteral
                         ps 'NAMECASE'  ps 'GENERAL' ps Boolean
                         ps 'ENTITY'    ps Boolean
DelimiterSet ::= 'DELIM' ps GeneralDelimiters ps ShortReferenceDelimiters
GeneralDelimiters ::= 'GENERAL' ps 'SGMLREF' ps SGMLDelims
SGMLDelims ::= SGMLDelim+ separator => ps proper => 1
SGMLDelim ::= Name ps ParameterLiteral
ShortReferenceDelimiters ::= 'SHORTREF' ps 'SGMLREF' ParameterLiterals
                           | 'SHORTREF' ps 'NONE' ParameterLiterals
ParameterLiterals ::= ps ParameterLiteralList
                    | Nil
ParameterLiteralList ::= ParameterLiteral ps ParameterLiteralList
                       | ParameterLiteral
ReservedNameUse ::= 'NAMES' ps 'SGMLREF' NamePairs
NamePairs ::= ps NamePairList
            | Nil
NamePairList ::= NamePair+ separator => ps proper => 1
NamePair ::= Name ps Name
QuantitySet ::= 'QUANTITY' ps 'SGMLREF' ps NameQuantities
NameQuantities ::= NameQuantity+ separator => ps proper => 1
NameQuantity ::= Name ps Number
Boolean ::= 'YES'
          | 'NO'
CountedBoolean ::= 'YES' ps Number
                 | 'NO'
ASN1Boolean ::= 'YES' ps 'ASN1'
              | 'YES'
              | 'NO'
Nothing ~
